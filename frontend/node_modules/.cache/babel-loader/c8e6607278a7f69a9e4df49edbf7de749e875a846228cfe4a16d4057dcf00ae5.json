{"ast":null,"code":"const getWeather = async () => {\n  try {\n    const response = await fetch(`http://104.209.92.41/api/weather?city=${city}`);\n\n    // Check if the response is successful\n    if (!response.ok) {\n      throw new Error('City not found or API error');\n    }\n    const data = await response.json();\n    setWeather(data);\n    setError(null); // Reset error if successful\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    setError(error.message); // Set error message\n    setWeather(null); // Reset weather in case of error\n  }\n};","map":{"version":3,"names":["getWeather","response","fetch","city","ok","Error","data","json","setWeather","setError","error","console","message"],"sources":["/Users/manu/weatherapp-1/frontend/src/app.js"],"sourcesContent":["const getWeather = async () => {\n  try {\n    const response = await fetch(`http://104.209.92.41/api/weather?city=${city}`);\n    \n    // Check if the response is successful\n    if (!response.ok) {\n      throw new Error('City not found or API error');\n    }\n\n    const data = await response.json();\n    setWeather(data);\n    setError(null);  // Reset error if successful\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    setError(error.message);  // Set error message\n    setWeather(null); // Reset weather in case of error\n  }\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCC,IAAI,EAAE,CAAC;;IAE7E;IACA,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCC,UAAU,CAACF,IAAI,CAAC;IAChBG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDD,QAAQ,CAACC,KAAK,CAACE,OAAO,CAAC,CAAC,CAAE;IAC1BJ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}